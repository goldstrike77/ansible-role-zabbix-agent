---
- name: "Fix facts for linuxmint - distribution release"
  set_fact:
    ansible_distribution_release: xenial
  when:
    - ansible_os_family == "Linuxmint"
    - ansible_distribution_release == "sonya" or ansible_distribution_release == "serena"

- name: "Fix facts for linuxmint - family"
  set_fact:
    ansible_os_family: Debian
  when: ansible_os_family == "Linuxmint"

- name: "Include OS-specific variables"
  include_vars: "{{ ansible_os_family }}.yml"
  tags:
    - zabbix-agent

- name: "Install the correct repository"
  include: "RedHat.yml"
  when:
    - ansible_os_family == "RedHat"
  tags:
    - zabbix-agent
    - init
    - config
    - service

- name: "Install the correct repository"
  include: "Debian.yml"
  when:
    - ansible_os_family == "Debian"
  tags:
    - zabbix-agent
    - init
    - config
    - service

- name: "Install the correct repository"
  include: "Suse.yml"
  when:
    - ansible_os_family == "Suse"
  tags:
    - zabbix-agent
    - init
    - config
    - service

- name: "Userparameter script transfer"
  copy:
    src: '{{ item }}'
    dest: '/usr/local/bin'
    owner: root
    group: root
    mode: 0777
  with_items:
    - '{{ zabbix_user_scripts }}'

- name: "Userparameter configure transfer"
  template:
    src: '{{ item }}.j2'
    dest: '{{ zabbix_agent_include }}/{{ item }}'
    owner: root
    group: root
    mode: 0644
  with_items:
    - '{{ zabbix_user_conf }}'

# straight to getenforce binary , workaround for missing python_selinux library
- name: "Get getenforce binary"
  stat:
    path: /usr/sbin/getenforce
  register: getenforce_bin
  become: yes

- name: "Collect getenforce output"
  command: getenforce
  register: sestatus
  when: 'getenforce_bin.stat.exists'
  changed_when: false
  become: yes

- name: "Set zabbix_selinux to true if getenforce returns Enforcing or Permissive"
  set_fact:
    zabbix_selinux: "{{ true }}"
  when: 'getenforce_bin.stat.exists and ("Enforcing" in sestatus.stdout or "Permissive" in sestatus.stdout)'

- name: "Allow zabbix_agent to start (SELinux)"
  selinux_permissive:
    name: zabbix_agent_t
    permissive: true
  become: yes
  async: 35
  poll: 0
  when:
    - zabbix_selinux

- name: "Configure zabbix-agent"
  template:
    src: zabbix_agentd.linux.conf.j2
    dest: /etc/zabbix/{{ zabbix_agent_conf }}
    owner: root
    group: root
    mode: 0644
  notify:
    - restart zabbix-agent
  become: yes
  tags:
    - zabbix-agent
    - config
    - init

- name: "Create directory for PSK file if not exist."
  file:
    path: "{{ zabbix_agent_tlspskfile | dirname }}"
    mode: 0755
    state: directory
  become: yes
  when:
    - zabbix_agent_tlspskfile is defined
    - zabbix_agent_tlspskfile != ''

- name: "Place TLS PSK File"
  copy:
    dest: "{{ zabbix_agent_tlspskfile }}"
    content: "{{ zabbix_agent_tlspsk_secret }}"
    owner: zabbix
    group: zabbix
    mode: 0400
  become: yes
  when:
    - zabbix_agent_tlspskfile is defined
    - zabbix_agent_tlspsk_secret is defined
    - zabbix_agent_tlspskfile != ''
    - zabbix_agent_tlspsk_secret != ''

- name: "Create include dir zabbix-agent"
  file:
    path: "{{ zabbix_agent_include }}"
    owner: root
    group: root
    state: directory
  become: yes
  tags:
    - config
    - include

- name: "Configure Firewall"
  when: (ansible_distribution == "CentOS" or ansible_distribution == "RedHat") and ansible_distribution_major_version|int > 6 and zabbix_agent_firewall_enable
  firewalld:
    port: '10050/tcp'
    permanent: 'true'
    state: 'enabled'
  register: result

- name: Reload firewalld service
  when: (ansible_distribution == "CentOS" or ansible_distribution == "RedHat") and ansible_distribution_major_version|int > 6 and zabbix_agent_firewall_enable and result.changed
  service:
    name: firewalld
    state: reloaded

- name: "Configure IPTables"
  iptables:
    destination_port: "{{ zabbix_agent_listenport }}"
    protocol: tcp
    chain: INPUT
    jump: ACCEPT
  become: yes
  when: zabbix_agent_firewall_enable and ansible_distribution_major_version|int < 7

- name: "Make sure the zabbix-agent service is running"
  service:
    name: "{{ zabbix_agent_service }}"
    state: started
    enabled: yes
  become: yes
  tags:
    - init
    - service
